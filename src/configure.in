AC_INIT(mzscheme/src/bignum.c)

AC_ARG_ENABLE(mred, ""  feature: mred           compile MrEd as well as MzScheme, , enable_mred=yes )

AC_ARG_ENABLE(sgc, ""  feature: sgc            use Senora GC instead of the Boehm GC)
AC_ARG_ENABLE(sgc-debug, ""  feature: sgc-debug      use Senora GC for debugging)
AC_ARG_ENABLE(osthreads, ""  feature: osthreads      use operating system threads to implement MzScheme threads)

# Make sure MrEd is really there
if test "${enable_mred}" = "yes" ; then
  if test -d $srcdir/mred ; then
    SKIPME=
  else
    enabled_mred=no
  fi
fi

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_RANLIB

if test "$CC" = "gcc" ; then 
  AS="gcc -c -x assembler-with-cpp"
else
  AS=as
fi

# If using gcc, we want all warnings:
if test "$CC" = "gcc" ; then 
  CFLAGS="$CFLAGS -Wall"
fi

AC_PATH_PROG(PERL,perl)

if test "${enable_mred}" = "yes" ; then
  AC_PATH_XTRA

  MAKE_MRED=mr
else
  MAKE_MRED=
fi

# Other options; mainly used to import other options
#  Add -DUSE_SENORA_GC for SenoraGC
#  Add -DSOLARIS_THREADS for Solaris threads
#  Add -DIRIX_SPROCS for Irix sprocs
OPTIONS=

# GC Directory
# sgc for SenoraGC
GCDIR=gc

MZBINTARGET=normal-bin
MZINSTALLTARGET=normal-install

LIBS=

AC_CHECK_LIB(m, cos)
AC_CHECK_LIB(dl, dlopen)

MZLIBS="$LIBS"

############## platform tests ################

OS=`uname -s`
case $OS in
  SunOS)
    case `uname -r` in
      5.*)
       if test "${enable_osthreads}" = "yes" ; then
	 OPTIONS="${OPTIONS} -DSOLARIS_THREADS"
	 LIBS="$LIBS -lthread"
       fi
       STATICLINK="-Wl,-Bstatic" # after -ldl
       LIBS="$LIBS -lsocket -lnsl -lintl"
       ;;
      *)
       ;;
    esac
    ;;
  AIX)
    AC_CHECK_LIB(dl, dlopen, , MZBINTARGET=aixdl-bin)
    LIBS="$LIBS -Wl,-bE:include/mzscheme.exp"
    ;;
  FreeBSD)
    LIBS="$LIBS -rdynamic"
    ;;
  OpenBSD)
    ;;
  IRIX)
    if test "${enable_osthreads}" = "yes" ; then
      OPTIONS="$OPTIONS -DIRIX_SPROCS"
      LIBS="$LIBS sproc.o"
    fi
    STATICLINK="/usr/lib/libC.a /usr/lib/libmalloc.a"
    ;;
  Linux)
    if test "${enable_osthreads}" = "yes" ; then
      OPTIONS="$OPTIONS -DLINUX_THREADS -D_REENTRANT"
      LIBS="$LIBS -lpthread"
    fi
    LIBS="$LIBS -rdynamic"
    ;;
  OSF1)
    if test "$CC" = "cc" ; then 
      CFLAGS="$CFLAGS -iee_with_inexact"
    fi
    ;;
  HP-UX)
    make CC=cc OPT=-O WARN='' OPTIONS='-Wp,-H,64000 -Aa -D_HPUX_SOURCE +k' AR='ar' LIBS='-lm -Wl,-E' DYNOPTIONS='+z' $GCOPTS DEBUGFLAGS='' "$@"
    # gcc:
    # make AR='ar' LIBS='-Wl,-E' DYNOPTIONS='-fPIC' $GCOPTS DEBUGFLAGS='' "$@"
    ;;
  SCO) # How do you really recognize SCO?
    LIBS="$LIBS -lc -lsocket"
    ;;
  CYGWIN*)
    MZBINTARGET=cygwin-bin
    MZINSTALLTARGET=cygwin-install
    LIBS="$LIBS gmzwin.exp"
    ;;
  BeOS)
    enable_sgc=yes
    # Use gcc if it's here
    gcc -v >& /dev/null
    if [ $? = 0 ] ; then
      COMP='CC=gcc'
    else
      COMP='CC=cc WARN=""'
    fi
    make $COMP LIBS="" $GCOPTS PERL="" "$@"
    ;;
  *)
    make $GCOPTS "$@"
    ;;
esac

############## SGC ################

if test "${enable_sgc}" = "yes" ; then
  GCDIR=sgc
  OPTIONS="$OPTIONS -DUSE_SENORA_GC"
fi

if test "${enable_sgc_debug}" = "yes" ; then
  GCDIR=sgc
  OPTIONS="$OPTIONS -DSGC_STD_DEBUGGING=1"
fi


############## operator new ################

MROPTIONS="-DOPERATOR_NEW_ARRAY"

############## final output ################

AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(CPP)
AC_SUBST(PERL)
AC_SUBST(AS)
AC_SUBST(RANLIB)

AC_SUBST(x_includes)
AC_SUBST(x_libraries)
AC_SUBST(X_CFLAGS)
AC_SUBST(X_LIBS)
AC_SUBST(X_PRE_LIBS)
AC_SUBST(X_EXTRA_LIBS)

AC_SUBST(OPTIONS)
AC_SUBST(MROPTIONS)
AC_SUBST(GCDIR)
AC_SUBST(MZLIBS)
AC_SUBST(MZBINTARGET)

AC_SUBST(MAKE_MRED)

mk_needed_dir()
{
  if test -d "$1" ; then
    SKIPME=
  else
    mkdir "$1"
  fi
}

mk_needed_dir wxxt
mk_needed_dir wxxt/utils
mk_needed_dir wxxt/utils/image
mk_needed_dir wxxt/contrib
mk_needed_dir wxxt/contrib/xpm

makefiles="Makefile
           mzscheme/Makefile
             mzscheme/src/Makefile mzscheme/dynsrc/Makefile
             mzscheme/gc/Makefile mzscheme/sgc/Makefile"

if test "${enable_mred}" = "yes" ; then
  makefiles="$makefiles
             mred/GNUmakefile mred/Make.env
               mred/wxs/GNUmakefile mred/wxme/GNUmakefile
               mred/gc2/GNUmakefile mred/wrap/Makefile
             wxxt/src/GNUmakefile wxxt/src/x/GNUmakefile
               wxxt/utils/image/src/GNUmakefile
               wxxt/contrib/xpm/lib/GNUmakefile"
fi

AC_OUTPUT($makefiles)

