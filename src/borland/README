This directory contains makefiles for building MzScheme with Borland's
C compiler. Thanks to Oscar Fuentes.

To use Borland's free command-line tools, you will also need
Microsoft's free assembler, MASM, because Borland's TASM is not free.
You'll also need to modify the makefiles, as described below.

MzScheme builds with Borland in two modes: with libmzsch and libmzgc
DLLs used by a (small) MzScheme executable, or as a monolithic (large)
MzScheme executable.

------------------------------------------------------------------------
DLL Build
------------------------------------------------------------------------

Follow these steps for a DLL-based build:

 1. cd libmzgc ; make -f libmzgc.mak

    Creates ../libmzgc.dll and ../libmzgc.lib

 2. cd libmzsch ; make -f libmzsch.mak
   
    Creates ../libmzsch.dll and ../libmzsch.lib

 3. cd mzscheme ; make -f mzscheme.mak

    Creates ../mzscheme.exe

 4. make -f starter.mak

    Creates ../collects/launcher/mzstart.exe

 5. cd ..\mzscheme\dynsrc; mkbordyn.bat

    Creates support files for mzc-built extensions

 6. cd ..; mzscheme -mvqM- setup -c

    Builds .zo files and launcher executables

The resulting DLLs do not have the same interface as DLLs built with
Microsoft's compiler. The difference is that every exported name has
an undescore prefix.

------------------------------------------------------------------------
Monolithic Build
------------------------------------------------------------------------

Follow these steps for a monolithic MzScheme executable:

 1. make -f Monolithic.mak 

    Creates ../monolithic.exe

 2. rename ../monolithic.exe ../mzschem.exe

 3. make -f starter.mak

    Creates ../collects/launcher/mzstart.exe

 4. cd ..\mzscheme\dynsrc; mkbordyn.bat

    Creates support files for mzc-built extensions

 5. cd ..; mzscheme -mvqM- setup -c

    Builds .zo files and launcher executables

------------------------------------------------------------------------
Using MASM with the free Borland Compiler
------------------------------------------------------------------------

To use MASM, ml.exe (the MASM assembler) must be in your path. Then,
modify the makefiles as follows:

Monolithic.mak
--------------

Insert the following six lines before the line containing ".pas.hpp":

..\mzscheme\src\mzsj86.obj: ..\mzscheme\src\mzsj86.c
	$(BCB)\BIN\$(BCC32) -S $(CFLAG1) $(WARNINGS) -I$(INCLUDEPATH) -D$(USERDEFINES);$(SYSDEFINES) -n$(@D) ..\mzscheme\src\mzsj86.c
	ml /Zm /c /Cx /Dmodel=\; ..\mzscheme\src\mzsj86.asm
..\mzscheme\gc\mach_dep.obj: ..\mzscheme\gc\mach_dep.c
	$(BCB)\BIN\$(BCC32) -S $(CFLAG1) $(WARNINGS) -I$(INCLUDEPATH) -D$(USERDEFINES);$(SYSDEFINES) -n$(@D) ..\mzscheme\gc\mach_dep.c
	ml /Zm /c /Cx /Dmodel=\; ..\mzscheme\gc\mach_dep.asm

libmzgc.mak
-----------

Insert the following three lines before the line containing ".pas.hpp":

..\..\mzscheme\gc\mach_dep.obj: ..\..\mzscheme\gc\mach_dep.c
	$(BCB)\BIN\$(BCC32) -S $(CFLAG1) $(WARNINGS) -I$(INCLUDEPATH) -D$(USERDEFINES);$(SYSDEFINES) -n$(@D) ..\..\mzscheme\gc\mach_dep.c
	ml /Zm /c /Cx /Dmodel=\; ..\..\mzscheme\gc\mach_dep.asm

libmzsch.mak
------------

Modify the line

DEFFILE = 

so that it is

DEFFILE = mzsj.def

Then insert the following three lines before the line containing ".pas.hpp":

..\..\mzscheme\src\mzsj86.obj: ..\..\mzscheme\src\mzsj86.c
	$(BCB)\BIN\$(BCC32) -S $(CFLAG1) $(WARNINGS) -I$(INCLUDEPATH) -D$(USERDEFINES);$(SYSDEFINES) -n$(@D) ..\..\mzscheme\src\mzsj86.c
	ml /Zm /c /Cx /Cp /Dmodel=\; /Dpublicdll=public ..\..\mzscheme\src\mzsj86.asm
