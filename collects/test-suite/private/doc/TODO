;;;;;;;;;;
;; Todo ;;
;;;;;;;;;;

multiview:
It'd be cool to allow multiple views of the test suite

errorboxes: future
Need to have boxes that handle errors.

output:
need to handle output (side effect) of test calls. Maybe not.

stepper: future
allow easy addition of break points and stepping of the testcases.

language-pref: future
Make a language level preference to execute or not execute the test cases.
Maybe just do it in debug mode? Actually, probablly just have a preference
to remember wether or not they have enabled or disabled test cases by
default.

disable: future
add a button to disable a test case.

error-no-stop:
when a test cases raises exception don't stop at all even it is not expected
just make it fail or even flag it as raising an error. This could be a
preference really.

project:
want to be able to run a lot of test-suites from the command line. Also sould
have a digest of number of tests failed or succeed at the end of a run.

scheme-unit:
integrate with scheme unit

;;;;;;;;;;
;; Bugs ;;
;;;;;;;;;;

namespace: robby
Adding the test-case macro to the top-level require makes test-cases in
modules not see the macro and fail to execute. Test-cases don't work in
beginner level because require makes no sence.

mouse-cursor: important
If you mouse down on a text box and mouse up in another, the cursor
appears in the second text box.

mouse-off: important, robby
If you mouse down on a button snip and move the mouse off, the button
stays depressed.

This may be the same as what you describe below, but when I type this:
(let loop () (loop)) into a test case window and then type more close
parens after that, things vibrate in a strange way.

test-suite entry boxes are not locked when the program is executing
