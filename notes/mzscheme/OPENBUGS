
Inexact (i.e., floating-point) numbers are not write/read invariant

(let loop ([x 0]) (call/cc loop)) accumulates memory

"synrule.ss" is missing `let-syntax' and `letrec-syntax'

Under MacOS, server TCP (via `tcp-listen') does not work reliably

Under MacOS, in the standalone MzScheme application, a blocking read 
 from stdin blocks all MzScheme threads

Under Windows, the `system' procedure blocks all MzScheme threads
 (`system*' works correctly)

Under AIX, write to tcp output port blocks when the low-level
  buffer is full

On Alpha machines, floating-point overflow is not handled properly
 (so +inf.0, -inf.0, and +nan.0 are messed up)
