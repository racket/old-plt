#!/bin/sh
#|
# PLT software installer
# Configures PLTHOME path within scripts
# For certain platforms and installations, adds extra
#  directory links (to reach non-standard binaries
#  through the platform's standard path)
# Creates .zo files if the user assents

if [ ! \( \( -x install \) -a \( -d collects \) \) ] ; then
  echo "install: must be run from its own directory"
  exit 1
fi

exec ./bin/mzscheme -r "$0" ${1+"$@"}
echo Couldn't start MzScheme --- install incomplete!
exit

|#

(unless (equal? #() argv)
  (error './install "no arguments allowed on the command line")
  (exit 1))

(define didnothing " (nothing to do)")

(define plthome (current-directory))
(putenv "PLTHOME" plthome)
(putenv "PLTCOLLECTS" "")

(define plthome (regexp-replace* "\"" plthome "\\\\\""))

(printf "setting PLTHOME to \"~a\" in scripts:~n" plthome)

(for-each
 (lambda (f)
   (cond
    [(member f '("mzscheme" "mred"))
     (printf " skipping bin/~a~n" f)]
    [else
     (let ([p (build-path "bin" f)])
       (when (file-exists? p)
	 (set! didnothing "")
	 (printf " updating ~a~n" p)
	 (let ([lines (with-input-from-file p
			(lambda ()
			  (let loop ()
			    (let ([l (read-line)])
			      (if (eof-object? l)
				  null
				  (cons l (loop)))))))])
	   (with-output-to-file p
	     (lambda ()
	       (for-each
		(lambda (l)
		  (let ([m (regexp-match "^(.*)PLTHOME=(.*)$" l)])
		    (if m
			(printf "~aPLTHOME=\"~a\"~n"
				(cadr m) plthome)
			(printf "~a~n" l))))
		lines))
	     'truncate))))]))
 (directory-list "bin"))

(define zo?
  (or (getenv "RPM_INSTALL_PREFIX")
      (begin
	(printf "PLT software starts up much faster with .zo files, but creating .zo~n")
	(printf "files now takes a few minutes and requires about 5MB of additional~n")
	(printf "disk space. Create .zo files later by running plt/bin/setup-plt.~n")
	(printf "  Create .zo files now (y/n)? [y] ")
	(flush-output)
	(let ([r (read-line)])
	  (not (regexp-match "^[nN]" r))))))

(when zo?
  (dynamic-require '(lib "setup.ss" "setup") #f))

(printf "PLT installation done~a.~n" didnothing)
(when (file-exists? "bin/drscheme")
  (printf "Run DrScheme as bin/drscheme.~n")
  (printf "For Help, select `Help Desk' from DrScheme's `Help' menu, or run bin/help-desk.~n"))

