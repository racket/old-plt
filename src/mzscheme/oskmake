#!/bin/sh
# This script builds the OSKit-based MzScheme kernel, assuming
#   that OSKit is installed in /usr/local, but that can be changed
#   via a shell variable below. The OSKit build goes
#   to a separate set of object directories, such as
#   src/objects/sys_oskit_x86/. The output is mzscheme.multiboot.
# If a `-t' command-line flag is provided, a
#   Linux binary is built for testing using as much
#   of the OSKit configuration for MzScheme as possible.

OSKHOME=${OSKHOME:-/usr/local}
STDINC=/usr/include

if [ "$1" = '-t' ] ; then
 echo "Build test app similar to OSKit app"
 INCLUDES="-DOSKIT_TEST"
 TARGET=""
 BUILDDIR=_oskit_x86_t
elif [ "$*" = '' ] ; then
 echo "Build MzScheme kernel"
 INCLUDES="-nostdinc -I${OSKHOME}/include/oskit -I${OSKHOME}/include/oskit/freebsd -I${OSKHOME}/include/oskit/c -I${OSKHOME}/include -I${STDINC}"
 TARGET=oskit
 BUILDDIR=_oskit_x86
else
 echo oskmake: unknown command-line: $*
 exit -1
fi

LANG="-DNO_TCP_SUPPORT"

# Use Linux FS drivers?
if [ "" ] ; then
  FS="-DOSK_LINUX_FILESYSTEMS"
  EXTRA_OSK_LIBS="-loskit_linux_fs -loskit_linux_dev -loskit_diskpart"
  export EXTRA_OSK_LIBS
else
  FS=""
fi

MZPLATFORMSUFFIX=$BUILDDIR make GCDIR=sgc OPTIONS="-DOSKIT -DUSE_SENORA_GC -DSGC_AUTO_ROOTS=0 $INCLUDES $LANG $FS" $TARGET
