(unit/sig
  plt:prims^
  (import)
  (define beginning
    '(number?
       =
       <
       >
       <=
       >=
       +
       -
       *
       /
       max
       min
       quotient
       remainder
       modulo
       square
       sqrt
       expt
       abs
       exp
       log
       sin
       cos
       tan
       asin
       acos
       atan
       sinh
       cosh
       exact?
       integer?
       zero?
       odd?
       even?
       add1
       sub1
       lcm
       gcd
       rational?
       numerator
       denominator
       inexact?
       real?
       floor
       ceiling
       round
       complex?
       make-polar
       real-part
       imag-part
       magnitude
       angle
       conjugate
       exact->inexact
       inexact->exact
       number->string
       integer->char
       random
       current-seconds
       e
       pi
       boolean?
       boolean=?
       not
       symbol?
       symbol=?
       cons?
       pair?
       empty?
       null?
       list?
       cons
       first
       car
       rest
       cdr
       second
       third
       fourth
       fifth
       sixth
       seventh
       eighth
       list-ref
       list
       append
       length
       memq
       reverse
       assq
       equal?
       char?
       char=?
       char<?
       char>?
       char<=?
       char>=?
       char-ci=?
       char-ci<?
       char-ci>?
       char-ci<=?
       char-ci>=?
       char-numeric?
       char-alphabetic?
       char-whitespace?
       char-upper-case?
       char-lower-case?
       char-upcase
       char-downcase
       char->integer
       string?
       string-length
       make-string
       string-ref
       substring
       string-copy
       string-append
       string=?
       string<?
       string>?
       string<=?
       string>=?
       string-ci=?
       string-ci<?
       string-ci>?
       string-ci<=?
       string-ci>=?
       string->number
       string->list
       list->string
       format
       make-posn
       posn?
       posn-x
       posn-y
       error
       struct?
       equal?
       eq?
       exit
       eval
       procedure?
       time-apply
       apply
       values
       printf
       void
       void?
       raise
       make-exn:else
       current-continuation-marks
       require-library/proc))
  (define intermediate
    '(number?
       =
       <
       >
       <=
       >=
       +
       -
       *
       /
       max
       min
       quotient
       remainder
       modulo
       square
       sqrt
       expt
       abs
       exp
       log
       sin
       cos
       tan
       asin
       acos
       atan
       sinh
       cosh
       exact?
       integer?
       zero?
       odd?
       even?
       add1
       sub1
       lcm
       gcd
       rational?
       numerator
       denominator
       inexact?
       real?
       floor
       ceiling
       round
       complex?
       make-polar
       real-part
       imag-part
       magnitude
       angle
       conjugate
       exact->inexact
       inexact->exact
       number->string
       integer->char
       random
       current-seconds
       e
       pi
       boolean?
       boolean=?
       not
       symbol?
       symbol=?
       cons?
       pair?
       empty?
       null?
       list?
       cons
       first
       car
       rest
       cdr
       second
       third
       fourth
       fifth
       sixth
       seventh
       eighth
       list-ref
       list
       append
       length
       memq
       reverse
       assq
       equal?
       char?
       char=?
       char<?
       char>?
       char<=?
       char>=?
       char-ci=?
       char-ci<?
       char-ci>?
       char-ci<=?
       char-ci>=?
       char-numeric?
       char-alphabetic?
       char-whitespace?
       char-upper-case?
       char-lower-case?
       char-upcase
       char-downcase
       char->integer
       string?
       string-length
       make-string
       string-ref
       substring
       string-copy
       string-append
       string=?
       string<?
       string>?
       string<=?
       string>=?
       string-ci=?
       string-ci<?
       string-ci>?
       string-ci<=?
       string-ci>=?
       string->number
       string->list
       list->string
       format
       make-posn
       posn?
       posn-x
       posn-y
       error
       struct?
       equal?
       eq?
       exit
       eval
       procedure?
       time-apply
       apply
       values
       printf
       void
       void?
       raise
       make-exn:else
       current-continuation-marks
       require-library/proc))
  (define advanced
    '(number?
       =
       <
       >
       <=
       >=
       +
       -
       *
       /
       max
       min
       quotient
       remainder
       modulo
       square
       sqrt
       expt
       abs
       exp
       log
       sin
       cos
       tan
       asin
       acos
       atan
       sinh
       cosh
       exact?
       integer?
       zero?
       odd?
       even?
       add1
       sub1
       lcm
       gcd
       rational?
       numerator
       denominator
       inexact?
       real?
       floor
       ceiling
       round
       complex?
       make-polar
       real-part
       imag-part
       magnitude
       angle
       conjugate
       exact->inexact
       inexact->exact
       number->string
       integer->char
       random
       current-seconds
       e
       pi
       boolean?
       boolean=?
       not
       symbol?
       symbol=?
       cons?
       pair?
       empty?
       null?
       list?
       cons
       first
       car
       rest
       cdr
       second
       third
       fourth
       fifth
       sixth
       seventh
       eighth
       list-ref
       list
       append
       length
       memq
       reverse
       assq
       equal?
       char?
       char=?
       char<?
       char>?
       char<=?
       char>=?
       char-ci=?
       char-ci<?
       char-ci>?
       char-ci<=?
       char-ci>=?
       char-numeric?
       char-alphabetic?
       char-whitespace?
       char-upper-case?
       char-lower-case?
       char-upcase
       char-downcase
       char->integer
       string?
       string-length
       make-string
       string-ref
       substring
       string-copy
       string-append
       string=?
       string<?
       string>?
       string<=?
       string>=?
       string-ci=?
       string-ci<?
       string-ci>?
       string-ci<=?
       string-ci>=?
       string->number
       string->list
       list->string
       format
       make-posn
       posn?
       posn-x
       posn-y
       set-posn-x!
       set-posn-y!
       error
       struct?
       equal?
       eq?
       exit
       eval
       procedure?
       time-apply
       apply
       values
       printf
       void
       void?
       raise
       make-exn:else
       current-continuation-marks
       require-library/proc
       force
       promise?
       make-promise
       vector
       make-vector
       vector-ref
       vector-set!
       vector?
       box
       unbox
       set-box!
       box?
       call/cc
       call-with-current-continuation)))
