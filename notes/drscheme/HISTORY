199d5

PRs: 2062 2086 2116
  
New language level: module. It behaves like `require'ing the
  definitions window, except that the REPL will contain
  every defined identifier in the module, not just those
  that are provided.

TeachPacks are back.

THINGS STILL MISSING (and promised to be broken :)

 - launchers
 - project manager

FUNCTIONALITY CHANGES

- TeachPacks are now implemented as modules.
  They are just loaded when execute is clicked.

- the get-teachpack-names method is gone from
  the language<%> interface.

- the expand-program method is now called after
  expansion is finished, with eof. This is a good
  time to kill the eventspace that was created
  for the expansion.

MINOR CHANGES AND BUG FIXES

- moved the Windows menu to the 
  second to last position of the menubar.

- split/collapse are now in the show menu

- check syntax now works properly behind 
  define-syntax, and other misc. bugs fixed.

199d4

TRANSLATIONS

- changed the way menu strings are constructed (used
  to concatenate things in a very English specific
  way). So, the menus section of string constants
  should be double checked. I fixed it as best I
  could, based on what was already there.

- added r5rs-like string constant, removed full-languages
  constant. This shows up in the language dialog. The second
  turn down tab used to be "Full" (in English). It is now
  "R5RS-like".
  
- added bring-frame-to-front and bring-frame-to-front...
  for the title of a new menu item in the windows menu
  and the title of the dialog that it brings up.

FUNCTIONALITY CHANGES

- the framework no longer implicit string-appends various strings
  to construct menu labels. This means that the methods
  of the form file-menu:new-string now specify the entire
  label of the menu, not just the bit after `New'.

- all languages created by the simple-module-based-language
  mixin have 'mzscheme set as the initial contents
  of the transformer portion of their namespace.

- drscheme:language:make-simple-settings/parse has been
  eliminated; use drscheme:language:make-simple-settings
  instead.
  
- added gui-utils:alphabetic-list-box% to framework

MINOR CHANGES AND BUG FIXES

- improved print-convert (and thus, drscheme's 
  non-write printers) for syntax and regexps.

- added an emacs-like c-x c-b feature to drscheme.
  type <menukey>-b to popup a window of the open frames
  and choose one without using the mouse by typing.

- changed "Full" to "R5RS-like" for language category.

- added r5rs and r5rs debugging languages to "R5RS-like".

- fixed misc Check Syntax problems -- it should now
  be in good shape (please report any bugs or bug-like
  behavior now)

- search dialog only shows replacing bit if the 
  buffer is unlocked.

- The enter key now submits the interaction in the REPL,
  even if the cursor isn't at the end of a sexpression.

- fixed a long standing bug where the paren highlighter
  would highlight parens inside single semi-colon comments
  in a funny way.

199d3

!!! WARNINGS !!!

- Check Syntax now exists, but is not completely
  functional yet. In particular, ignore the red-color
  on the language-position of modules.

- It is possible to switch the interface language of
  DrSheme's GUI. The mechanism is in place, in any
  case. The translations aren't yet, so you probably
  don't want to try to switch. Also, you will see
  funny warnings when starting up DrScheme to that
  effect. Ignore them unless you are working on
  the translation.
  
FUNCTIONALITY CHANGES

- all string constants that appear in DrScheme's GUI
  must now be put in the string-constants collection.
  Search in Help Desk for `string-constant' for more
  details.
  
- Help Desk now downloads its docs from the old pre-v200
  tag place.

- added `expand-program' to tools interface. useful for
  all tools that process program text.
  
- added vertical-dragable-mixin, vertical-dragable%, 
  vertical-dragable<%> to framework.

- removed vertical-resizable<%>, vertical-resizable-mixin,
  vertical-resizable%, vertical-resizable-pane% from
  framework

- added icon:get-up/down-cursor and 
  icon:get-left/right-cursor to the framework.
  They return the standard cursors for sizing 
  columns left and right, and up and down.

- exit:exit and exit:can-exit? now accept optional 
  booleans that specify if the user should be asked
  about quitting.
  
MINOR CHANGES AND BUG FIXES

- drscheme constructor and quasiquote printers
  now shows syntax's structure, and module-path-index
  structure.

- drscheme's quasiquote printer now works a little bit
  better for expressions like '('a 'a).
  It used to show `((,'quote a) (,'quote a)), but
  now it shows `('a 'a).

- the resize tab has been changed -- just grab and drag
  the space between the definitions and interactions
  windows now, instead of that ugly little triangle
  that used to be on the right.

- several misc bugs in split/collapse functionality
  fixed.
  
- showing/hiding the definitions and interactions windows
  restores relative sizing of windows.
  (splitting and collapsing may still mess it up, tho)
  

199d2

FUNCTIONALITY CHANGES

  - the splash screen now only allows a single
    splash screen (per namespace).

MINOR CHANGES AND BUG FIXES

  - structs now print properly in the REPL.

  - the bug report form now connects to bugs.drscheme.org
    instead of cs.rice.edu directly, so earthlink users
    should be able to submit PRs via Help Desk.

  - the resize tab should work properly now.

  - the language dialog cancels properly and
    properly restores defaults when re-opened.

199d1

WARNINGS

 This release is a first cut intended for 
 tools implementors to have something to work with.
 There are still many things missing. The biggest
 omissions:

 - the syntax checker,
 - the project manager,
 - teachpacks, and
 - launchers

FUNCTIONALITY CHANGES

 - it is now possible to add languages to DrScheme,
   as tools.
 - tools are now specified in info.ss files in top-level
   collections, rather than in a subcollection of the
   drscheme collection (see the tools manual for details).
 - added multi file searching
 - new mechanism for specifying languages
   added to tools interface.
 - changed guiutils.ss to gui-utils.ss in framework collection.
 - changed many other names to match the new -unit.ss, and -sig.ss
   convention instead of the old r.ss and s.ss convention.

The tools and framework manuals have also been released. There are some issues with tex2page that I haven't figured out, so some links may not work.


103d105

PRS FIXED

  1801: graphics help failure
  1798: help desk build path problems
  1641: relative paths problem when searching in help desk

FUNCTIONALITY CHANGES

 - Changed the defaults colors in Check Syntax to match
   what Dorai Sitaram uses for the upcoming web release of 
   How to Design Programs (excellent choices!)

 - adding splitting of the definitions and interactions
   canvases, to be able to see two different parts of the
   buffer simultaneously

MINOR CHANGES AND BUG FIXES

 - when saving or executing, 
   if the file has been overwritten in the filesystem, 
   drscheme prompts you to make sure you want to overwrite
   or execute the file.
   
 - added save-file-out-of-date? to editor:basic<%>

 - improved the read/write display in drscheme frames
   (was "locked" and "unlocked", now is "Read/Write" and "Read only"
    and the "Read only" variant is yellow on black)

 - Help Desk no longer exits when submitting a bug report.

The exp-tagged source (in CVS) for DrScheme is now version 
103d104.

 PRS

  1410: read-line in DrScheme
  1642: bad teachpack causes drscheme to freeze
  1663: Dr. Scheme pasting what's on the clipboard when you don't want it too
  1681: backtrace window should indicate source out-of-synch
  1682: indentation and #%
  1702: DrScheme filename popup doesn't always update on save
  1726: Colour parameters in sixlib procedures are not too coherent
  1747: faulty teachpacks no longer signal an error
  1783: DrScheme, standard input, and eof
  1792: interactive movable split-pane & scrolling-content feature request
        (just the movable split-pane part is done)

 FUNCTIONALITY CHANGES
 
 - added Teach Youself Scheme in Fixnum Days (with Dorai's permission)
   to our documentation. To get it, you should delete plt/collects/doc/help,
   start up Help Desk (to redownload that directory), restart Help Desk,
   and then follow the big "Scheme" link on the front page, to the
   "Teach Yourself Scheme in Fixnum Days" link to download it. Once
   it is downloaded, the index will be added to Help Desk for easy
   searching.

 - implicit sequencing has been eliminated from the advanced language 
   level in order to give better error messages. Use an explicit `begin' 
   for sequencing. (this change was made between 102 and
   103, but we forgot to put it into the release notes)

 - teachpacks finally support macro definitions.
   Download the revised documentation to see how!
   (throw away your copy of plt/collects/doc/drscheme/
    and start up help desk. search for teachpack
    follow the link and download the new docs)
 
 - DrScheme's main two windows now have a little draggable
   thumb that changes the percentage difference between
   the windows
   
 - added panel:vertical-resizable%, panel:vertical-resiable-pane%,
   panel:vertical-resizable-mixin, and panel:vertical-resizable<%>
   to framework
 
 MINOR CHANGES AND BUG FIXES

 - there is now a little eof icon next to the input box when
   input is expected. you can click it send an eof (close the
   input port until execute is next clicked). Suggestions for
   a better icon welcome.
  
 - misc changes to html.ss in the browser collection
   to support Teach Yourself Scheme in Fixnum Days,
   including more colors, div support, better whitespace
   management, and transparent url links.


The exp-tagged source (in CVS) for DrScheme is now version 
103d103.

 PRS
 
   1772: Unexpected (read-char) behavior-one problem on MacOS, a different one on Unix
   1774: need to define set-first! and set-rest!
   1780: help-desk allows blank descriptions and steps to reproduce 
   
 FUNCTIONALITY CHANGES
 
 - the filename button (in the top right of the drs frame)
   now pops up a menu of the directories
   that contain the saved file's directories. Choose one
   to open a `get-file' dialog in that directory.
 
 - teaching language's primitives are now keywords.
   This means that functions like `length' cannot be redefined
   in the teaching languages. This change was made to
   be compatible with the stepper.
 
 - added `clear-annotations' to drscheme:rep:context<%>
   
103d102

 PRS

  1719:  insert fraction isn't one step

 FUNCTIONALITY CHANGES
 
 - check syntax now shows teaching language primitive docs in drscheme window,
   viar right-button popup menu.
 
 - check syntax now opens full scheme primitive docs in help desk, 
   via right-button popup menu.

 - (without checking the syntax) the right click context-sensitive menu
   has an entry to search based either on the selection, or on the text
   that was clicked on.

 - the project manager has split up the files in the project
   into two lists: elaboration files and regular files. The
   elaboration files are loaded before the regular files.

 - check syntax has been integrated with the project manager. When both
   are installed, check syntax will load the files in the
   project-manager's "elaboration" window before checking the syntax.
   This means that you can stick signature definitions in a project's
   elaboration window and check syntax on individual files in the project.

   Using this feature, I was able to check the syntax of help-win.ss
   in the help collection and finally rename `f' to help-desk-frame! (that
   had been bugging me for quite some time.... it is not an
   easy search-and-replace kind of change :)

 - added clear-annotations to definitions-text% class for tools.
   
 - Thanks to Philippe Meunier and Paul Steckler, a preliminary version 
   of a spidey rewrite is available. To get it, you need to cvs two 
   new directories:
   
      plt/collects/newspidey
     
   and
   
      plt/collects/drscheme/tools/spidey2
     
   Note that this is _very_ preliminary. So far, it only handles 
   lambda, case-lambda, variables, application, car, cdr and cons
   and only in the full scheme language.
      
MINOR CHANGES AND BUG FIXES
 
 - the "drscheme jr" test suite now runs in both drscheme and
   drscheme jr The guts have been abstracted out from the support
   for running the test. See readme.txt in plt/tests/drscheme-jr
   for details.

 - when in "sort by name" mode for the "(define ...)" button, 
   the check marks are now correct.

 - error message from turtle primitives when window is not
   open has been fixed.

 - added turtle primitives to the documented functions in
   advanced.

 - the main drscheme window remembers how big it was last
   resized to, and uses that size to as the default for
   the next frame that is created.

 - new language detail: teaching language primitives and
   syntax. It only applies to the 2 mred language levels and
   it adds the core libraries, the turtles library, and the
   posn structs to drscheme.

 - internal errors that happen on the user's thread no
   longer wedge drscheme.

 - check syntax now creates its own eventspace, etc. to check the
   syntax. That means that checking the syntax of this program:
    
      (begin-elaboration-time (eval '(define x 1)))
    
   no longer defines x in the repl. Ditto for other things,
   like killing threads and such.

103d101

 PRS

  512: menu keybindings should change automatically according to pref

 FUNCTIONALITY CHANGES

  - The teaching languages in DrScheme only have the primitives
    that are listed in the documentation, now.

  - DrScheme now prints exact real numbers as graphical fractions
    (instead of the (+ 1 1/2) notation). These are also valid as
    input, but you have to copy and paste to get them into your
    program.

  - Added an "insert fraction" menu item to the edit menu for
    inserting fractions directly into the program.

	 MINOR CHANGES AND BUG FIXES

  - check syntax now rechecks the syntax right after an
    alpha conversion, since alpha conversion may introduce
    syntax errors into the program. Also, this makes it easier
    to rename multiple identifiers.

103d100

 PRS

 FUNCTIONALITY CHANGES

 - there is a replacement for the info.ss file in town, now.
   Instead of the info.ss file, consider using an info-table.ss
   file. This file is designed to be computer editable and eventually
   the project manager will have an editor for that (with an
   integrated help system).

   If an info-table.ss file is present and an info.ss file is also
   present, the info-table.ss file is consulted first and the info.ss
   file is consulted if the info-table.ss file doesn't have that
   binding.

 - please do not load info.ss files directly anymore. Use
   the get-info.ss library in the setup collection. I have already
   changed these uses:
    - zo compiler
    - help desk (blurb stuff)
    - setup
   I know only of this use that must be changed:
    - mzc

  - separated searchable-mixin into two pieces:
    - searchable-mixin, and searchable-text-mixin.

 MINOR CHANGES AND BUG FIXES
 
  - added control-x o as a keybinding that switches the focus
    between the interactions and definitions windows.

  - when drscheme frame is associated with a project, clicking the
    execute button will prompt the user about executing the project.

  - language dialog now has a parent.

  - drscheme:language:language-dialog procedure accepts an optional
    second argument specifing the parent of the dialog
    (defaults to #f)


Version 103:

General
-------

 - typing characters in to the definitions and interactions window
   should be more responsive now (it was noticably slow on slower
   machines)

 - files added to projects are now stored as relative files, 
   by default. (use project menu to change the default)

 - project files are saved using a platform-independant syntax for
   paths now.

 - Using file|open and choosing a project file (based on contents) will open
   the project file. (this only will work with project files saved in this
   version -- old project files won't be recognized until they are
   saved once.)

 - Opening or a .plt file will install the .plt file, after querying the user.

 - added break button to project windows 
   (does the same thing as the break menu item always did)

 - added save button and little "full name" thingy to project
   frames

 - DrScheme permits the use of "." (period) as an identifier in the
   student language levels.

 - implicit sequencing has been eliminated from the advanced language
   level in order to give better error messages. Use an explicit `begin'
   for sequencing.

Version 102:

General
-------

 - the help desk language level specific documentation has been
   integrated into drscheme.

 - errortrace-like facility is now available in drscheme debug
   language levels. Click on the bug next to an error message to see
   a trace of the continuation of the error.

 - drscheme-jr now supports teachpacks 
   (those that don't use GUIs, like htdp/dir.ss)

 - launchers can now be run from any directory.
   They do not need to be saved in a particular place (this has been
   true for some time, but it is officially true now.).

 - the debug full scheme languages now allow loading of files
   that contain graphics.

 - #! is treated like a comment when executing the defintions window,
   if it is the first two characters in the definitions window.

 - rarely used save menu items relegated to sub-menu.

 - added a "keymap" menu to the edit menu (shortcut: k)
   that opens a window where you can see all of the key
   bindings' names and short cuts, and you can choose one
   to invoke.

 - added a "Kill" menu item that kills all computation and reclaims
   all resources from the program that drscheme is executing.
   This is useful for multi-threaded apps that get out of hand.

 - meta-control-d, meta-control-u, meta-shift-control-d, meta-shift-control-u
   keybindings all restored.

 - drscheme now has a little button on the bar that lets you hop
   around between definitions in the program. It is approximate in
   that it doesn't really know every detail about the lexical
   structure of scheme, but it should still be quite useful. 

 - interactions window now shows the names of the teachpacks that
   were installed at last execute.

 - drscheme now allows multiple teachpacks.

 - teachpack names are not in the area with the execute button, instead
   they are now shown in the language menu.

 - repl errors that are in some loaded file have little clickable
   icons that open the file and show the error's source location in
   the file.
   
 - Only the platform-specific dialogs are used in drscheme now, on
   all platforms. The preference has been removed from the dialog.

 - project files are `load'able. That is, if you have the right
   language settings, you can do 
   
           mzscheme -qmvr myproj.proj

   and have the same effect as clicking execute on the project
   window. For mred, you will need to do something like this:

           mred -qmvr myproj.proj -e "(yield (make-semaphore 0))"

   so that mred doesn't quit automatically.

 - Help Desk now has a "feeling lucky" option ala google (menu
   shortcut: l). It goes directly to the first item that would have
   been found in a regular search.

 - Clicking on an error message link in drscheme now uses the "feeling
   lucky" style search in help desk.

 - clicking on the name in the topleft of the drscheme frame opens a
   little window with the full path.

 - check syntax now shows its syntax errors in a separate window.

 - the teaching languages now come with:

     make-posn, posn-x, posn-y, and posn?

   by default (no library required).

 - teaching levels print exact numbers whose denominators are evenly
   disivible by 2 and 5 as decimals.

 - teaching levels treat input decimals as exact numbers.

 - in the main help-desk window, space does pgdn and backspace does
   pgup, ala netscape. Also, typing return or enter while the cursor
   is on a link follows the link.

 - added class/d macro. It's syntax is like that for a unit, but it
   defines a class. Roughly:

   (class/d
    super-expresion
    init-args
    ((public var ...)
     (override var ...)
     (inherit var ...)
     (rename (var var) ...))
 
     definitions-and-expressions ...)

    This a new part of macro.ss in the mzlib library

Tools and Framework
-------------------

 - drscheme:rep:process-text/zodiac and
   drscheme:rep:process-text/no-zodiac
   are now called drscheme:load-handler:process-text/zodiac and
   drscheme:load-handler:process-text/no-zodiac.

 - added a slew of -on-demand methods to frame:standard-menus-mixin

 - the framework now imports a definition of the preferences
   file location. Use this to have a separate preferences file
   for each different application.

 - do not use 'drscheme:settings anymore to get the current
   language settings from drscheme. Now, use

      drscheme:language:settings-preferences-symbol

   (which is bound to the right symbol) instead.

 - setup plt's ``clean'' info.ss flag does not recur
   into subdirectories anymore.

 - the graphics library (sometimes known as sixlib) no longer 
   accepts any scaling arguments. 

 - the framework's preferences system now requires you to
   set the marshall/unmarshalling functions (if any) before
   setting the default preference.

 - drscheme now supports site-specific default preferences.
   To use, create a file prefs.ss in the defaults collection
   that is a copy of the preferences file that you want to 
   be the defaults. Then, if the user-specific preferences file
   doesn't exist (or the preferences in it are from an old version),
   the contents of the prefs.ss file in the defaults collection is
   used as the preferences.

 - drscheme now wraps uses with-handlers so that if a tool 
   signals an error when it is loaded or invoked, it just
   puts a window with the error message and continues, instead
   of keeping drscheme from starting up.

 - the .plt installer no longer automatically deletes compiled
   files when installing a .plt file. 

 - setup-plt now uses the 'clean flag in info.ss to determine
   the files to be deleted when --clean-ing a collection. It
   defaults to the files in the "compiled" sub-collection of a
   collection.

 - setup-plt no longer automatically runs --clean when installing
   a .plt file.

 - framework:
   - added canonicalize-keybinding-string
   - added aug-keymap%, aug-keymap<%>
   - editor:basic now sets it's keymap to an
     aug-keymap<%> during initialization.

 - the framework's info frame mixins no longer require frame:editor<%> 
   as an input. Also, they are moved lower in the hierarchy of the
   instantiated mixin classes in the framework. This affects all of the
   frame:XX% classes.

 tools:
   - ensure-interactions-shown is now ensure-rep-shown
   - do-many-buffer-evals is now do-many-text-evals

 - clever-file-format now symetrically changes the file's format to
   'standard. It used to rever the file format to 'text when there
   were no more images in it. Now, it also changes back to non-'text
   when images (and other non-string-snips) are added back.

 - the framework's gui-utils:get-snips/chars-from-buffer is now
   gui-utils:get-snips/chars-from-text

 - zodiac now supports graphical expressions. If a snip implements
   zodiac's expand<%> interface, zodiac calls a method of the snip to
   expand it. 
   
 - the drscheme:get/extend:extend-* functions no longer haver %s at
   the end of their names.


PRS
---

  1507: thread error freezes repl
  1506: Help Desk exits gracelessly when interrupted
  1503: Launcher prints debug info
  1502: (define's hard to find
  1499: text mode display auto-wraps
  1490: alt-tduring execution has different binding
  1484: cannot paste in search box on macos
  1480: default launcher name is "Save A Launcher"
  1478: parity reversed in Dr Jr command line flag
  1461: Kill menu problems
  1460: Help Desk has empty preferences
  1459: search menu items work on empty search text
  1456: teachpacks don't add
  1455: project windows never leave `Windows' menu
  1437:
  1428: setup -c deletes files for all platforms
  1424: long (list ...) displays don't display correctly
  1405: memory usage box should be read only
  1398: Downloading doc files requires restart
  1377: replacing by empty string loops
  1341:
  1334:
  1330: killing repl, then check-syntax hangs
  1306:
  1297:
  1235:
  1171:
  1144: match docs not setup right in Help Desk
   737: mred:preferences library too global
   599: mac: can't double click to open files while mred starts up
   406: bad error message for sixlib op

  1274, 1280, 1264, 1260, 1239, 1225, 1220, 1268, 1209, 1208,
  1196, 1180, 1096, 1088, 1043, 771, 752, 846

  1358, 1344, 1341, 1329, 1322, 1242 (docs not yet built), 1235 


Version 101:

General
-------

 - The teaching libraries are now called teachpacks. See the teachpack
   release notes for more information.

 - DrScheme's languages have changed (again). The langauges are now:

   - Beginning Student
   - Intermediate Student
   - Advanced Student
   - Full Scheme, which contains:
     - Graphical Full Scheme (with and without debugging), and
     - Textual Full Scheme (with and without debugging)

 - Help Desk now supports bug report submissions. Please use it in
   favor of the web based form. To submit a bug, follow the "Sumbit a
   Bug" link near the bottom of Help Desk's front page

 - On European keyboards, the backslash character
   may not work properly in DrScheme.  If you 
   experience this problem, comment out this line:

        (map-meta "\\" "remove-space")

   in PLTHOME/collects/framework/keymap.ss.

 - For tools, invoke-library is now called invoke-teachpack.

 - Renamed two files in the graphics collection:
    graphic.ss is now graphics.ss
    graphics.ss is now graphicss.ss

 - DrScheme's print menu now inserts the time, date and filename in the
   header of the file to be printed.

 - comment/uncomment is improved. Now, it blindly adds a semicolon to the 
   front of each line (and doesn't add extra semicolons on following lines)
   and aways removes one semicolon (if present) from the front of each line.

 - Parenthesis highlighting now turns unmatched parens red
   in addition to turning matched parenthesis regions grey.
   Also (now that the caret flashes) if the caret is between two
   parens, both before and after parens will be highlighted,
   not just the ones before.
   
   Thus, every time the cursor is next to an uncommented
   paren, the programmer sees some feedback about the paren.

Version 100:

General
-------

 - DrScheme's languages have changed. The new languages are:

    - Beginner
    - Intermediate
    - Advanced
    - MzScheme
    - MrEd

   The first three languages are essentially the same as in version
   53, except that graphics primitives have been removed. (Instead,
   domain-specific graphics commands can be loaded as libraries.) The
   turtles remain in the advanced language.

   The MzScheme and MrEd languages match exactly the languages
   provided by the MzScheme and MrEd executables.

 - A simple algebraic stepper, dubbed The Foot, is now available.  The
   Foot permits users to construct a source-level evaluation trace for
   programs written in the Beginner language. It will be expanded in
   future releases.

 - DrScheme's Help Desk provides online help for DrScheme, its
   languages, and its libraries.

 - Graphics functions were removed from the teaching languages
   (Beginner, Intermediate, and Advanced), except Turtles in
   Advanced. To use graphics functions, you must select a library (and
   the teaching libraries are not yet updated).

 - The old viewport-based graphics library can be loaded into the MrEd
   Debug language via (require-library "graphic.ss" "graphics").

 - I/O within DrScheme is substantially improved.

 - The library and tool interfaces for extended DrScheme have
   changed.


Version 53:

General
-------

 - view menu items now have accelerators

 - (<= exp) isn't allowed in beginner. (same for <, >, and >=)

 - print primitive is now setup correctly to print based on the language level

 - paren-matching in semi-colon comments is disabled

 - info panel "running" message is now aligned correctly 
 
 - The check synatax and analyze buttons are now disabled during evaluation

 - library directory now starts in "MZLIB_COLLECTS_DIR/../../lib"
   which is our best approximation to "PLTHOME/lib"
 
 - elevator library can now select more than one floor at a time


Version 52:

General
-------

- The words "running" or "not running" at the bottom of the
  DrScheme frame indicate whether or not work is happening in the 
  user's program. 

- a "Windows" menu has been added which keeps track of the currently
  open drscheme windows.

- the source locations for "load"ed files now match the numbers 
  in the bottom of the drscheme window.

- the thread that evaluations (including execution) take place on is
  the same as the eventspace's main thread, unless the evaluation
  thread is killed. In that case, the eventspace's main thread is
  re-generated, but the execution thread does not.

- The REPL implementation has been cleaned up.

- the turtles window does not survive across executions anymore

- the Quasi-R4RS language level has been renamed to R4RS+

DrScheme Tools/Libraries
------------------------

- new methods on rep:edit%: report-exception-error accepts an exception and
  prints the error message in the console.

- send-scheme is outdated. Use run-in-evaluation-thread instead

- the drscheme:tool^ signature has changed. A new subunit, "basis" has
  been aded and the process-finish struct is now in that subunit. So,
  drscheme:language:process-finish? becomes
  drscheme:basis:process-finish?, etc.
  
  The process-finish structure no longer has a boolean indicating sucess. 
  Instead, an exception is raised.


- the settings for the language have been re-aranged
  - there are two new parameters, exported from the basis
    subunit of drscheme:export^, current-setting and current-vocabulary
    - current-vocabulary contains the vocabulary that zodiac uses to
      perform macro expansion
    - current-setting is bound to a setting struct, which encapsulates
      all of the information about the language level
  - the process-*/zodiac and process-*/no-zodiac proceudres
    are no longer methods and their arguments have changed


Version 51:

General 
-------
- fixed error message for "eq?" and "cons" at beginner level.

- check syntax does not work with an unitialized repl when:
  the source contains define-macro. (won't be fixed in the release)

- eval no longer loops forever in mred vocabulary 

- searching keybindings have changed. There are four distinct actions:
   action1: move keyboard focus to the searching window, opening it if necessary, 
            or if already there search forward
   action2: move keyboard focus to the searching window, opening it if necessary, 
            or if already there search backward.
   action3: search again, in the same direction
   action4: move the focus between the main window, searching window and replacment window
   action5: hide the searching window

The actions are mapped to different keys, based on the platform. 

On unix:
 action1 => control-s, meta-%
 action2 => control-r
 action3 => f3
 action4 => control-i
 action5 => control-g

On the macintosh:
  action1 => command-f
  action2 => command-r
  action3 => command-g
  action4 => command-o
  action5 => command-.

On windows:
 action1 => control-f
 action2 => control-r
 action3 => f3, control-g
 action4 => control-i
 action5 => escape

- turned off the file name printouts on splash screen

  evaluate: 
  (wx:write-resource "mred" "splashMessages" 1 (wx:find-path 'setup-file))
  to turn them back on.

- fixed a bug that caused error messages to be displayed in message
  boxes more often than neccessary. (as opposed to printing in the
  repl)

- parenthesis matching is improved

- The empty list is now called "empty" instead of "null" with the
  constructor style printer.

- The analyze button puts up a dialog saying "please wait, loading",
  now.

- the fonts dialog now shows previews of the selected fonts. You
  still need to restart to see the changes, unfortunately.

DrScheme Tools/Libraries
------------------------

- tools must now import wx names explicitly, as a new first import.

- the parameters interface has changed. Instead getting and setting
  the class, the tool programmer must register a function that
  accepts a class and returns a class. See the manual for more
  details.

- process/zodiac-finish has been renamed to process-finish
