The files ABOUT MZSCHEME and ABOUT MRED provide detailed instructions for compiling various flavors of mzscheme and mred on the mac.  For a "complete,regular" build, we provide the "All.mcp" makefile, which makes the followingprojects (and applications)All.mcp - MzScheme(app).mcp   ----> (MzScheme application)    - the gc.mcp (CLASSIC ONLY)    - MzScheme(lib).mcp - Starters.mcp        ----> (GoMz application) - MrEd.mcp            ----> (MrEd application)    - the gc.mcp    - MzScheme(lib).mcp    - wxMac.mcp    - wxs.mcp    - A List.mcpXS - Starters.mcp        ----> (GoMr application) Notes:(a) this "tree" is actually a dag, because both MzScheme(lib) and Starters arereferred to twice.  In the first case, both references are to the same target,and it's only built once.  In the second case, the Starters project is usedto produce both the GoMz and GoMr applications, so two different targets arebuilt.(b) All of the elements in this graph are project files in their own right, and all may be built individually, if desired.(c) there's an implicit parameterization by "platform" in this tree.  In other words, there are "ppc" and "68k" targets for most of these projects.the only projects that do not have exactly two targets, one for ppc and onefor 68k, are "All" and "Starters".  [Ed. Note --- in version 200, 68k codeis no longer part of DrScheme]  "All" is different because along with ppc and 68k targets, it has a targetcalled simply "All" which builds both targets.  "Starters" is different because while it does have two targets, they're both 68k targets.  One builds the "GoMz" starter application and the otherbuilds the "GoMr" starter application.  These starter applications are thebasis for all of the starter applications: "DrScheme", "DrScheme Jr", "Help Desk", "Games", and so forth.  These starter applications simply invoke MrEd or MzScheme with some "command-line" arguments and then die. (This is why increasing the memory allotment to these applicationsis a complete waste of memory.) To build all of the starters,  invoke MzScheme while holding down the command key (also known as the "flower" or "open-apple" key); thisallows you to specify command-line arguments.  Supply the following string:-mvqL- setup.ss compilerThis step creates all of the other applications in "plt" (besidesMrEd and MzScheme). It also makes .zo files; to skip compiling .zos,add -n to the end of the command line.For more details on compiling MzScheme and/or MrEd, please refer tothe files "ABOUT MZSCHEME" and "ABOUT MRED"-- John Clements, May 25, 2000