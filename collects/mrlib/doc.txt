[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]

                          _graph.ss_

[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]

The graph.ss library provides a graph drawing toolkit, built
out of mred's pasteboard%s.

In provides four exports: graph-snip<%>, graph-snip-mixin,
graph-pasteboard-mixin, and add-links.

============================================================

The _graph-pasteboard-mixin_ does not add any methods to
pasteboard%. It overrides many methods to draw lines between
graph-snip<%>s that it contains.

============================================================

The _graph-snip<%>_ interface has these methods:

> (send a graph-snip<%> get-children) - returns a list of
   snips that implement graph-snip<%>. Each of these snips
   will have a line drawn from it, pointing at this snip.

> (send a graph-snip<%> add-child (is-a?/c graph-snip<%>)) -
  adds a child of this snip. Instead of calling this method,
  consider using the add-child function provided from this
  library. 

> (send a graph-snip<%> remove-child (is-a?/c graph-snip<%>)) - 
  removes a child snip from this snip. Be sure to remove this
  snip as a parent from the argument, too.
  

> (send a graph-snip<%> get-parents) - returns a list of
  snips that implement graph-snip<%>. Each of these
  snips will have a line drawn to it, starting from this
  snip. 

> (send a graph-snip<%> add-parent (is-a?/c graph-snip<%>))
> (send a graph-snip<%> add-parent (is-a?/c graph-snip<%>)
                                   (union false? (is-a?/c pen%))
                                   (union false? (is-a?/c pen%))
                                   (union false? (is-a?/c brush%))
                                   (union false? (is-a?/c brush%)))
  adds a parent of this snip. Instead of calling this method,
  consider using the add-child function provided from this
  library. 

> (send a graph-snip<%> remove-parent)
  removes a parent snip from this snip. Be sure to remove this
  snip as a child from the argument, too.

> (send a graph-snip<%> get-parent-links) - this method is
  only used internally. It returns a list of opaque
  structures that contain information about the parent snips
  and what color the links between them should be.

============================================================

The _graph-snip-mixin_ adds the graph-snip<%> functionality
to a snip%.

============================================================

The _add-links_ function connects a parent snip to a child
snip in the same pasteboard.

> (add-links (is-a?/c graph-snip<%>) (is-a?/c graph-snip<%>))
> (add-links (is-a?/c graph-snip<%>) 
             (is-a?/c graph-snip<%>)
             (union false? (is-a?/c pen%))
             (union false? (is-a?/c pen%))
             (union false? (is-a?/c brush%))
             (union false? (is-a?/c brush%)))

When called with two arguments, connects the snips using a
blue/purple color scheme for the links. The first snip is
the parent and the second snip is the child.

When called with four arguments, uses the two pens and
brushes for the color scheme. The first pen and the first
brush are used when the mouse cursor is over the snip
(or a child or parent) and the second pen and brush are used
when the mouse cursor is not over the snip. The brush is used to
draw inside the arrow head and the pen is used to draw the
border of the arrowhead and the line connecting the two
snips.


[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]

                     _name-message.ss_

[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]


The _name-message%_ class is derived from canvas%. It
overrides the on-paint and on-event methods to draw the name
of a file and handle clicks to popup a menu for choosing a
directory.

> (send a-name-message set-message file-name? msg)

  file-name? : boolean
  msg : string

If file-name? is #t, msg is treated like a pathname and
clicks on the name message objects popup a menu that opens a
get-file dialog.

If file-name is #f, msg is treated as a regular
string. Clicking on the name message pops up a dialog saying
that there is no file name until the file is saved.
      

============================================================

> (calc-button-min-sizes dc string) 

Calculates the minimum width and height of a button label
(when drawn with draw-button-label). Returns two values: the
width and height.

============================================================

> (draw-frame-button-label dc label width height inverted)

Draws a button label like the one for the (define ...) and
filename buttons in the top-left corner of the DrScheme

frame. Use this function to draw similar buttons. The basic
idea is to create a canvas object whose on-paint method is
overridden to call this function.  The dc should be canvas's
dc object, the label should be the string to display on the
button.  The width and height arguments should be the width
and height of the button and inverted? should be #t when the
button is being depressed.

See calc-button-min-sizes for help calculating the min sizes
of the button.
