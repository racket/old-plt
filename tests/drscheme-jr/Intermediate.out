Intermediate level tests of DrScheme Jr
Date: Wed Nov 4 14:01:18 CST 1998
DrScheme Jr is loading. Please wait...
Welcome to DrScheme Jr version 100/15, Copyright (c) 1995-98 PLT
Language: Intermediate
> > > > > > > > > 'define
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> > 5
> 'lambda
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> (lambda (a1) ...)
> 'inexact
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> #i3.14
> 'app
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> > 5
> 'cond-1
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> 5
> 'cond-2
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> 5
> 'cond-3
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> 5
> 'cond-4
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> 5
> 'if-1
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> 5
> 'if-2
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> 5
> 'quote-1
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> 'a
> 'quote-2
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> 'a
> 'local-1
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> 5
> 'local-2
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> 5
> 'local-3
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> #t
> 'local-4
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> #t
> 'let-1
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> 5
> 'let-2
> empty
> stdin: 124.22-124.23: reference to undefined identifier: x
> 'let-3
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> 5
> 'let-4
> empty
> stdin: 12.23-12.24: reference to undefined identifier: x
> 'letrec-1
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> #t
> 'letrec-2
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> #t
> 'letrec-3
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> 5
> 'case-sense
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> #t
> 'set!
> (cons "Advanced" (cons "Mz" empty))
> stdin: 37.1-39.5: Malformed let
> 'begin
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.2-4.7: reference to undefined identifier: begin
> 'begin0
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.2-4.8: reference to undefined identifier: begin0
> 'recur-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-8.30: Malformed let
> 'recur-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 5.8-5.21: First term after parenthesis is illegal in an application
> 'recur-3
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.11-4.14: reference to undefined identifier: rec
> 'do-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.10-4.22: '(1 3 5 7 9) is not a symbol
> 'do-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.5-5.20: First term after parenthesis is illegal in an application
> 'call-cc-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.10-6.52: Malformed lambda
> 'call-cc-2
> (cons "Advanced" (cons "Mz" empty))
> 5
> 'let-cc-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 13.9-13.48: First term after parenthesis is illegal in an application
> 'let-cc-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.11-4.17: reference to undefined identifier: let/cc
> 'when-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.2-4.6: reference to undefined identifier: when
> 'when-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 5.4-5.8: reference to undefined identifier: when
> 'unless-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.2-4.8: reference to undefined identifier: unless
> 'unless-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-6.5: Malformed let
> 'one-armed-if-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.10: If must have an else clause
> 'one-armed-if-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-6.5: Malformed let
> 'eq?-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.10: eq?: expected symbols as arguments, received 5 and 5
> 'quote-num-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.3: '5 is not a symbol
> 'quote-num-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.10: '5 is not a symbol
> 'if-3
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.5-4.6: if: value 5 is neither #t nor #f
> 'cond-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.8-4.9: if: value 5 is neither #t nor #f
> 'thunk
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.18-4.20: All procedures must take at least one argument
> 'anonymous-fun-app
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.20: First term after parenthesis is illegal in an application
> 'keyword-interface
> empty
> stdin: 6.1-6.12: Invalid use of keyword #%interface
> 'keyword-unit
> empty
> stdin: 4.1-4.7: Invalid use of keyword #%unit
> 'keyword-struct
> empty
> stdin: 4.1-4.9: Invalid use of keyword #%struct
> 'keyword-unquote
> empty
> stdin: 4.1-4.10: Invalid use of keyword #%unquote
> 'keyword-let-macro
> empty
> stdin: 4.1-4.12: Invalid use of keyword #%let-macro
> 'keyword-set!
> empty
> stdin: 4.1-4.7: Invalid use of keyword #%set!
> 'keyword-if
> empty
> stdin: 4.1-4.5: Invalid use of keyword #%if
> 'keyword-quote
> empty
> stdin: 4.1-4.8: Invalid use of keyword #%quote
> 'keyword-begin0
> empty
> stdin: 4.1-4.9: Invalid use of keyword #%begin0
> 'keyword-begin
> empty
> stdin: 4.1-4.8: Invalid use of keyword #%begin
> 'keyword-let
> empty
> stdin: 4.1-4.6: Invalid use of keyword #%let
> 'keyword-let*
> empty
> stdin: 4.1-4.7: Invalid use of keyword #%let*
> 'keyword-letrec
> empty
> stdin: 4.1-4.9: Invalid use of keyword #%letrec
> 'keyword-letrec
> empty
> stdin: 4.1-4.9: Invalid use of keyword #%letrec
> 'keyword-lambda
> empty
> stdin: 4.1-4.9: Invalid use of keyword #%lambda
> 'keyword-let-expansion-time
> empty
> stdin: 4.1-4.21: Invalid use of keyword #%let-expansion-time
> 'keyword-define-expansion-time
> empty
> stdin: 4.1-4.24: Invalid use of keyword #%define-expansion-time
> 'keyword-invoke-open-unit
> empty
> stdin: 4.1-4.19: Invalid use of keyword #%invoke-open-unit
> 'keyword-invoke-unit
> empty
> stdin: 4.1-4.14: Invalid use of keyword #%invoke-unit
> 'keyword-compound-unit
> empty
> stdin: 4.1-4.16: Invalid use of keyword #%compound-unit
> 'keyword-unquote-splicing
> empty
> stdin: 4.1-4.19: Invalid use of keyword #%unquote-splicing
> 'keyword-let-id-macro
> empty
> stdin: 4.1-4.15: Invalid use of keyword #%let-id-macro
> 'keyword-define-id-macro
> empty
> stdin: 4.1-4.18: Invalid use of keyword #%define-id-macro
> 'keyword-define-macro
> empty
> stdin: 4.1-4.15: Invalid use of keyword #%define-macro
> 'keyword-case-lambda
> empty
> stdin: 4.1-4.14: Invalid use of keyword #%case-lambda
> 'keyword-let-values
> empty
> stdin: 4.1-4.13: Invalid use of keyword #%let-values
> 'keyword-let*-values
> empty
> stdin: 4.1-4.14: Invalid use of keyword #%let*-values
> 'keyword-letrec-values
> empty
> stdin: 4.1-4.16: Invalid use of keyword #%letrec-values
> 'keyword-letrec-values
> empty
> stdin: 4.1-4.16: Invalid use of keyword #%letrec-values
> 'keyword-define-values
> empty
> stdin: 4.1-4.16: Invalid use of keyword #%define-values
> 'keyword-cond
> empty
> stdin: 4.1-4.7: Invalid use of keyword #%cond
> 'keyword-class*/names
> empty
> stdin: 4.1-4.15: Invalid use of keyword #%class*/names
> 'struct-1
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> > (cons make-a
      (cons a? (cons a-b (cons a-c (cons set-a-b! (cons set-a-c! empty))))))
> 'struct-2
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> > (cons make-empty-testing-structure (cons empty-testing-structure? empty))
> 'struct-3
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> > 5
> 'struct-4
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> > 5
> 'struct-5
> (cons "Intermediate" (cons "Advanced" (cons "Mz" empty)))
> > 5
> 'delay-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 37.1-37.10: All procedures must take at least one argument
> 'delay-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-5.17: All procedures must take at least one argument
> 'delay-3
> (cons "Advanced" (cons "Mz" empty))
> stdin: 5.11-5.20: All procedures must take at least one argument
> 'quote-list-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.16: '(a a a) is not a symbol
> 'quote-list-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.9: '(a a a) is not a symbol
> 'empty-list-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.4: '() is not a symbol
> 'empty-list-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.11: '() is not a symbol
> 'back-quote-1
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.1-4.9: '(a a a) is not a symbol
> 'back-quote-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.11-4.17: '(a a) is not a symbol
> 'back-quote-3
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> (cons 'a (cons 'a (cons 'a empty)))
> 'quasi-quote-1
> (cons "Beginner" (cons "Intermediate" (cons "Advanced" (cons "Mz" empty))))
> 'a
> 'quasi-quote-2
> (cons "Advanced" (cons "Mz" empty))
> stdin: 12.1-12.21: '(a a a) is not a symbol
> 'quasi-quote-3
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.30-4.43: '(a a) is not a symbol
> 'quasi-quote-4
> (cons "Advanced" (cons "Mz" empty))
> stdin: 4.22-4.35: '(a a) is not a symbol
> 'set!-id
> empty
> stdin: 4.2-4.6: reference to undefined identifier: set!
> stdin: 1.1-1.26: reference to undefined identifier: some-undefined-identifier
> 'non-list
> "Mz"
> stdin: 4.1-4.11: cons: second argument must be of type <list>, given 3 and 4
> 'fallthrough-cond-1
> empty
> stdin: 4.8-4.22: no matching cond clause
> 'fallthrough-cond-2
> empty
> stdin: 4.17-4.27: First term after parenthesis is illegal in an application
> 